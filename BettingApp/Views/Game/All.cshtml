@model GameQueryModel

@{
    ViewData["Title"] = "All Games";
}

<link rel="stylesheet" href="~/css/home.css" asp-append-version="true" />
<form method="get"> 
    <div class="row"> 
        <div class="form-group col-md-3 d-flex justify-content-between"> 
            <div class="form-group"> 
                <label asp-for="Competition"></label>
                <select asp-for="Competition" class="form-control"> 
                    <option value="">All</option> 
                    @foreach (var competition in Model.Competitions)
                    {
                        <option value="@competition.Name">@competition.Name</option>
                    } 
                <span asp-validation-for="Competition"></span>
                </select> 
            </div> 
        </div> 
        <div class="form-group col-md-3"> 
            <label asp-for="TeamTerm"></label>
            <input asp-for="TeamTerm" class="form-control" placeholder="...">
            <span asp-validation-for="TeamTerm"></span>
        </div>
        <div class="form-group col-md-2">
            <label asp-for="Upcoming"></label>
            <br />
            <input id="upcoming" type="checkbox" asp-for="Upcoming" checked="@Model.Upcoming">
        </div>
        <div class="form-group col-md-2">
            <label asp-for="Results"></label>
            <br />
            <input id="results" type="checkbox" asp-for="Results" checked="@Model.Results">
        </div>
        <div class="col-md-2"> 
            <div class="form-group mt-4 p-2"> 
                <input type="submit" value="Search" class="btn btn-primary" /> 
            </div> 
        </div> 
    </div> 
</form>
@{
    var previousPage = Model.CurrentPage - 1; 
    if (previousPage < 1) 
    { 
        previousPage = 1; 
    }
    var maxPage = Math.Ceiling((double)Model.TotalGamesCount /
        GameQueryModel.GamesPerPage);
}

<div class="row mb-5"> 
    <div class="col-md-7 d-grid gap-2 d-md-flex justify-content-md-center"> 
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)" asp-controller="Game" asp-action="All" asp-route-currentPage="@previousPage" asp-route-competition="@Model.Competition" asp-route-teamTerm="@Model.TeamTerm" asp-route-upcoming="@Model.Upcoming" asp-route-results="@Model.Results">
            <<
        </a>
    </div> 
    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Games.Any();
    } 
    <div class="col-md-4 d-grid gap-2 d-md-flex justify-content-md-center"> 
        <a class="btn btn-primary @(shouldButtonBeDisabled ? "disabled" : string.Empty)" asp-controller="Game" asp-action="All" asp-route-currentPage="@(Model.CurrentPage + 1)" asp-route-competition="@Model.Competition" asp-route-teamTerm="@Model.TeamTerm" asp-route-upcoming="@Model.Upcoming" asp-route-results="@Model.Results">
            >>
        </a> 
    </div> 
</div>

<div class="container">
    @if (!Model.Games.Any())
    {
        <h2 class="text-center">No games found by the given criteria!</h2>
    } 

    <div class="container">
        @foreach (var game in Model.Games)
        {
            @await Html.PartialAsync("../Shared/_GameCardPartial.cshtml", game)
        }
        @await Html.PartialAsync("../Shared/_GameBetsPartial.cshtml")
    </div>
</div>

<script type="text/javascript">
    $(function() {
        $("#upcoming").change(function() {
            if ($(this).is(':checked')) {
                $("#results").prop('checked', false);
            }
        });
        $("#results").change(function () {
            if ($(this).is(':checked')) {
                $("#upcoming").prop('checked', false);
            }
        })
    })
</script>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/js/bet.js"></script>
<script type="text/javascript">
    function getToken() {
        var token = '@Html.AntiForgeryToken()';
        token = $(token).val();
        return token;
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }